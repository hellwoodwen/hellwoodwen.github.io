{"version":3,"file":"static/webpack/static/development/pages/index.js.386a7af3df62c002d07f.hot-update.js","sources":["webpack:///./layout/MultiObjectsGalleryModal.js"],"sourcesContent":["export default class MultiObjectGalleryModal extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      actualItem: 0\n    }\n  }\n\n  changeNext = (event, totalElements) => {\n    event.preventDefault()\n    const updateItem =\n      this.state.actualItem === totalElements - 1\n        ? 0\n        : this.state.actualItem + 1\n    this.setState({ actualItem: updateItem })\n  }\n\n  changePrev = (event, totalElements) => {\n    event.preventDefault()\n    const updateItem =\n      this.state.actualItem === 0\n        ? totalElements - 1\n        : this.state.actualItem - 1\n    this.setState({ actualItem: updateItem })\n  }\n\n  changeElement = (event, picIndex) => {\n    event.preventDefault()\n    this.setState({ actualItem: picIndex })\n  }\n\n  getPicPath = (galUrl, ProjectUrl, folder, pictureName) => {\n    return `static/pics/${galUrl}/${ProjectUrl}/${folder}/${pictureName}`\n  }\n\n  splitText = chain => {\n    const toReturn = chain\n      ? chain.split(\"\\n\").map((item, i) => <p key={i}>{item}</p>)\n      : \"\"\n    return toReturn\n  }\n\n  render() {\n    const { closeProject, projectInfo, galleryName } = this.props\n    const { actualItem } = this.state\n\n    let galleryElements = []\n    if (projectInfo.videoQqCode) {\n      galleryElements = [[\"video\", projectInfo.videoQqCode]]\n    }\n    if (projectInfo.pictures) {\n      projectInfo.pictures.map(pic => {\n        galleryElements.push([\"image\", pic])\n      })\n    }\n\n    const hasMultiplePictures = galleryElements.length > 1 ? true : false\n    const hasDescription = projectInfo.explanation !== \"\" ? true : false\n    let wrapperStyle = hasMultiplePictures\n      ? \"multiplePictures\"\n      : \"singlePicture\"\n    wrapperStyle += hasDescription ? \" hasDescription\" : \" withoutDescription\"\n\n    return (\n      <div id=\"modalGallery\" className={wrapperStyle}>\n        <div id=\"picContainer\">\n          {galleryElements.length > 1 && (\n            <div id=\"picCounter\">{`${actualItem + 1} of ${\n              galleryElements.length\n            }`}</div>\n          )}\n          {galleryElements[actualItem][0] === \"image\" && (\n            <img\n              src={this.getPicPath(\n                galleryName,\n                projectInfo.url,\n                \"big\",\n                galleryElements[actualItem][1]\n              )}\n            />\n          )}\n          {galleryElements[actualItem][0] === \"video\" && (\n            <iframe\n              frameborder=\"0\"\n              src={`https://v.qq.com/txp/iframe/player.html?vid=${galleryElements[actualItem][1]}`}\n              allowFullScreen=\"true\"\n            ></iframe>\n          )}\n        </div>\n        {hasDescription && (\n          <div id=\"explanationBox\">\n            <h1>{projectInfo.explanation.title}</h1>\n            {projectInfo.explanation.materials !== \"\" && (\n              <span>{projectInfo.explanation.materials}</span>\n            )}\n            {this.splitText(projectInfo.explanation.explanation)}\n          </div>\n        )}\n        {hasMultiplePictures && (\n          <div id=\"navBar\">\n            <div id=\"modalPrev\" className=\"modalButton\">\n              <a onClick={e => this.changePrev(e, galleryElements.length)}>\n                Previous\n              </a>\n            </div>\n            <div id=\"navThumbs\">\n              {galleryElements.map((element, index) => {\n                const aStyle = index === actualItem ? \"actual\" : \"\"\n                return (\n                  <a\n                    onClick={e => this.changeElement(e, index, element[0])}\n                    className={aStyle}\n                    key={index}\n                  >\n                    {element[0] === \"video\" && (\n                      <img\n                        src={this.getPicPath(\n                          galleryName,\n                          projectInfo.url,\n                          \"th\",\n                          \"video-default.jpg\"\n                        )}\n                      />\n                    )}\n                    {element[0] === \"image\" && (\n                      <img\n                        src={this.getPicPath(\n                          galleryName,\n                          projectInfo.url,\n                          \"th\",\n                          element[1]\n                        )}\n                      />\n                    )}\n                  </a>\n                )\n              })}\n            </div>\n            <div id=\"modalNext\" className=\"modalButton\">\n              <a onClick={e => this.changeNext(e, galleryElements.length)}>\n                Next\n              </a>\n            </div>\n          </div>\n        )}\n        <div id=\"modalClose\" className=\"modalButton\">\n          <a onClick={closeProject}>Close</a>\n        </div>\n\n        <style jsx>\n          {`\n            #modalGallery {\n              position: fixed;\n              top: 0;\n              left: 0;\n              width: 100vw;\n              height: 100vh;\n              background-color: rgba(0, 0, 0, 0.88);\n              z-index: 100;\n              display: grid;\n              grid-template-columns: [prev] 10vw [nav] auto [next] 12vw [close] 12vw [end];\n              grid-template-rows: [image] 80% [navbar] 20vh [end];\n            }\n\n            #picContainer {\n              grid-column: prev / next;\n              grid-row: image / navbar;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            }\n\n            #explanationBox {\n              background-color: rgba(0, 0, 0, 0.57);\n              padding: 40px 35px 20px;\n              overflow: auto;\n              grid-column: next / end;\n              grid-row: image / navbar;\n            }\n\n            #navBar {\n              grid-column: prev / close;\n              display: grid;\n              grid-template-columns: [prev] 10vw [nav] auto [next] 12vw [close];\n            }\n\n            #navThumbs {\n              display: flex;\n              flex-wrap: nowrap;\n              overflow-x: auto;\n              justify-content: flex-start;\n              align-items: center;\n            }\n\n            #modalClose {\n              grid-column: close / end;\n            }\n\n            #modalGallery.singlePicture #picContainer {\n              grid-row: image / end;\n            }\n\n            #modalGallery.withoutDescription #picContainer {\n              grid-row: image / navbar;\n              grid-column: prev / end;\n            }\n\n            #picContainer img {\n              width: auto;\n              height: auto;\n              max-height: 100%;\n              max-width: 100%;\n            }\n\n            iframe {\n              width: 80vw;\n              height: 71vh;\n            }\n\n            #modalGallery.singlePicture #explanationBox {\n              grid-row: image / navbar;\n            }\n\n            .modalButton {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n            }\n\n            .modalButton a {\n              width: 71px;\n              height: 71px;\n              background-image: url(/static/css/modal-nav.png);\n              text-indent: -10000px;\n            }\n\n            .modalButton a:hover {\n              background-position-x: right;\n              cursor: pointer;\n            }\n\n            #modalPrev a {\n              background-position-y: bottom;\n            }\n\n            #modalNext a {\n              background-position-y: center;\n            }\n\n            #picCounter {\n              position: absolute;\n              left: 30%;\n              top: 10px;\n              background-color: rgba(0, 0, 0, 0.79);\n              width: 120px;\n              height: 24px;\n              text-align: center;\n              color: #8e8e8e;\n              font-size: 0.8em;\n              padding-top: 6px;\n              border-radius: 20px;\n            }\n\n            #navThumbs a {\n              width: 110px;\n              min-width: 110px;\n              display: flex;\n              justify-content: flex-start;\n              align-items: center;\n              margin: 0 7px;\n            }\n\n            #navThumbs img {\n              width: auto;\n              height: auto;\n              max-height: 90%;\n              max-width: 90%;\n            }\n            h1 {\n              margin-top: 0;\n              font: 1.3em raleway-black;\n              color: white;\n            }\n\n            span {\n              font-family: raleway-semibold;\n              color: #d2d2d2;\n            }\n\n            p {\n              color: #878787;\n              font-size: 0.9em;\n            }\n\n            a.actual img {\n              border-right: 5px solid #e7e7e7;\n              border-left: 5px solid #e7e7e7;\n              margin-left: -5px;\n            }\n            @media only screen and (max-width: 600px) {\n              #modalGallery {\n                grid-template-columns: auto 80px;\n                grid-template-rows: 100px auto 40vh;\n                grid-template-areas:\n                  \"nav close\"\n                  \"picture picture\"\n                  \"explanation explanation\";\n              }\n\n              #modalGallery.singlePicture.hasDescription {\n                grid-template-rows: [start]auto[picture] 80px [close] 40vh[description];\n                grid-template-columns: [start]auto[close] 80px [end];\n              }\n              #navBar {\n                grid-area: nav;\n                grid-template-columns: 80px auto 80px;\n                grid-template-rows: 100px;\n                grid-template-areas: \"prev thumbs next\";\n              }\n\n              #picContainer {\n                grid-area: picture;\n              }\n              #modalGallery.singlePicture.hasDescription #picContainer {\n                grid-column: start / description;\n                grid-row: start / close;\n              }\n\n              #modalGallery.singlePicture.hasDescription #modalClose {\n                grid-column: close / end;\n                grid-row: picture / close;\n              }\n\n              #modalGallery.singlePicture.hasDescription #explanationBox {\n                grid-column: start / close;\n                grid-row: picture / description;\n                margin-right: 80px;\n              }\n\n              #explanationBox {\n                grid-area: explanation;\n                padding-bottom: 50px;\n              }\n              #modalPrev {\n                grid-area: prev;\n              }\n              #modalNext {\n                grid-area: next;\n              }\n              #modalClose {\n                grid-area: close;\n              }\n\n              #navThumbs {\n                grid-area: thumbs;\n              }\n\n              #picContainer img {\n                max-height: 50vh;\n              }\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAxBA;AA0BA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7BA;AA+BA;AACA;AACA;AAjCA;AAmCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAtCA;AACA;AADA;AAFA;AAKA;AACA;;;AAmCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlFA;AAAA;AAAA;AA6SA;;;;AA7WA;AACA;;;;;A","sourceRoot":""}